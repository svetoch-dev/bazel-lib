module(name = "svetoch_bazel_lib")

###########
# Bazel
###########
bazel_dep(name = "buildifier_prebuilt", version = "8.2.0.2", dev_dependency = True)

bazel_dep(name = "aspect_bazel_lib", version = "2.14.0")

bazel_lib_toolchains = use_extension("@aspect_bazel_lib//lib:extensions.bzl", "toolchains")
use_repo(bazel_lib_toolchains, "zstd_toolchains")

bazel_dep(name = "rules_multirun", version = "0.10.0")

######################
# Terraform support
######################

bazel_dep(name = "rules_tf")
git_override(
    module_name = "rules_tf",
    commit = "2cb8d57eba4c190d37914c44af17a7d0b7b4f07f",
    remote = "https://github.com/ggramal/rules_tf",
)

tf = use_extension("@rules_tf//tf:extensions.bzl", "tf")
tf.toolchain(
    name = "svetoch_bazel_lib_tf_executable",
    version = "1.7.4",
)
use_repo(tf, "svetoch_bazel_lib_tf_executable")

load_file = use_extension("@svetoch_bazel_lib//tools:extensions.bzl", "load_file")
load_file.json(
    name = "svetoch_bazel_lib_tfvars",
    src = "//:terraform.tfvars.json.example",
    variable_name = "tfvars",
)
use_repo(load_file, "svetoch_bazel_lib_tfvars")

###################
# Container support
###################

bazel_dep(name = "rules_oci", version = "2.2.2")
bazel_dep(name = "rules_distroless", version = "0.5.1")

##################
# Python support
##################
bazel_dep(name = "aspect_rules_py", version = "1.3.2")
bazel_dep(name = "rules_python", version = "1.2.0")

python = use_extension("@rules_python//python/extensions:python.bzl", "python")
python.toolchain(
    python_version = "3.11",
)
use_repo(python, python = "python_versions")

pip = use_extension("@rules_python//python/extensions:pip.bzl", "pip")
pip.parse(
    hub_name = "svetoch_bazel_lib_py_deps",
    python_version = "3.11",
    requirements_lock = "@svetoch_bazel_lib//deps/py:requirements_lock_3_11.txt",
)
use_repo(pip, "svetoch_bazel_lib_py_deps")
